<?xml version="1.0"?>

<robot name="iris_hokuyo" 
  xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='visual_material' default='Red' />
  <xacro:arg name='enable_mavlink_interface' default='true' />
  <xacro:arg name='enable_gps_plugin' default='true' />
  <xacro:arg name='gps_noise' default='true' />
  <xacro:arg name='enable_ground_truth' default='false' />
  <xacro:arg name='enable_logging' default='false' />

  <!-- macros for gazebo plugins, sensors -->
  <xacro:include filename="$(find robots_description)/urdf/component_snippets.xacro" />

  <!-- Instantiate iris "mechanics" -->
  <xacro:include filename="$(find robots_description)/models/iris_hokuyo/geometry.xacro" />

  <xacro:if value="$(arg enable_gps_plugin)">
    <!-- Instantiate gps plugin. -->
    <xacro:gps_plugin_macro namespace="${namespace}" gps_noise="$(arg gps_noise)">
    </xacro:gps_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_mavlink_interface)">
    <!-- Instantiate mavlink telemetry interface. -->
    <xacro:mavlink_interface_macro namespace="${namespace}" imu_sub_topic="/imu" mavlink_addr="$(arg mavlink_addr)" mavlink_udp_port="$(arg mavlink_udp_port)">
    </xacro:mavlink_interface_macro>
  </xacro:if>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:imu_plugin_macro namespace="${namespace}" imu_suffix="" parent_link="base_link" imu_topic="/imu" mass_imu_sensor="0.015" gyroscope_noise_density="0.0003394" gyroscopoe_random_walk="0.000038785" gyroscope_bias_correlation_time="1000.0" gyroscope_turn_on_bias_sigma="0.0087" accelerometer_noise_density="0.004" accelerometer_random_walk="0.006" accelerometer_bias_correlation_time="300.0" accelerometer_turn_on_bias_sigma="0.1960">
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>

  <xacro:if value="$(arg enable_ground_truth)">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro namespace="${namespace}" imu_suffix="gt" parent_link="base_link" imu_topic="ground_truth/imu" mass_imu_sensor="0.00001" gyroscope_noise_density="0.0" gyroscopoe_random_walk="0.0" gyroscope_bias_correlation_time="1000.0" gyroscope_turn_on_bias_sigma="0.0" accelerometer_noise_density="0.0" accelerometer_random_walk="0.0" accelerometer_bias_correlation_time="300.0" accelerometer_turn_on_bias_sigma="0.0">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro namespace="${namespace}/ground_truth" odometry_sensor_suffix="gt" parent_link="base_link" pose_topic="pose" pose_with_covariance_topic="pose_with_covariance" position_topic="position" transform_topic="transform" odometry_topic="odometry" parent_frame_id="world" mass_odometry_sensor="0.00001" measurement_divisor="1" measurement_delay="0" unknown_delay="0.0" noise_normal_position="0 0 0" noise_normal_quaternion="0 0 0" noise_normal_linear_velocity="0 0 0" noise_normal_angular_velocity="0 0 0" noise_uniform_position="0 0 0" noise_uniform_quaternion="0 0 0" noise_uniform_linear_velocity="0 0 0" noise_uniform_angular_velocity="0 0 0" enable_odometry_map="false" odometry_map="" image_scale="">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro namespace="${namespace}" bag_file="$(arg log_file)" rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}">
    </xacro:bag_plugin_macro>
  </xacro:if>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 .1" rpy="0 -0.872665 3.14"/>
    <parent link="base_link"/>
    <child link="hokuyo"/>
  </joint>

  <!-- Hokuyo Laser -->
  <link name="hokuyo">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://robots_description/models/iris_hokuyo/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <gazebo reference="hokuyo">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>15.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser 
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and 
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true 
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/hokuyo_laser_scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>


</robot>
